package application.model;

import java.util.EnumSet;
import java.util.HashMap;

public enum Type {
	
	Steel(0.5, 2, 0.5, 1, 1, 0.5, 2, 0.5, 0.5, 0.5, 0.5, 0, 0.5, 0.5, 2, 1, 1, 0.5),
	Fighting(1 ,1 ,1, 1, 1, 2, 1, 1, 0.5, 1, 1, 1, 2, 0.5, 1, 1, 0.5, 2),
	Dragon(1, 1, 2, 0.5, 0.5, 2, 0.5, 2, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1),
	Water(0.5, 1, 1, 0.5, 2, 1, 0.5, 0.5, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1),
	Electric(0.5, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0.5),
	Fairy(2, 0.5, 0, 1, 1, 1, 1, 1, 0.5, 1, 1, 2, 1, 1, 1, 1, 0.5, 1),
	Fire(0.5, 1, 1, 2, 1, 0.5, 0.5, 0.5, 0.5, 1, 0.5, 1, 1, 2, 2, 1, 1, 1),
	Ice(2, 2, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1),
	Bug(1, 0.5, 1, 1, 1, 1, 2, 1, 1, 1, 0.5, 1, 1, 2, 0.5, 1, 1, 2),
	Normal(1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1),
	Grass(1, 1, 1, 0.5, 0.5, 1, 2, 2, 2, 1, 0.5, 2, 1, 1, 0.5, 1, 1, 2),
	Poison(1, 0.5, 1, 1, 1, 0.5, 1, 1, 0.5, 1, 0.5, 0.5, 2, 1, 2, 1, 1, 1),
	Psychic(1, 0.5, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0.5, 1, 1, 2, 2, 1),
	Rock(2, 2, 1, 2, 1, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 1, 2, 1, 1, 0.5),
	Ground(1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 2, 0.5, 1, 0.5, 1, 1, 1, 1),
	Ghost(1, 0, 1, 1, 1, 1, 1, 1, 0.5, 0, 1, 0.5, 1, 1, 1, 2, 2, 1),
	Dark(1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0.5, 0.5, 1),
	Flying(1, 0.5, 1, 1, 2, 1, 1, 2, 0.5, 1, 0.5, 1, 1, 2, 0, 1, 1, 1);
	
	private HashMap<Type, Double> multiplicator;

	private Type(double... powerAgainst) {
		multiplicator = new HashMap<>();
		
		Object[] types = EnumSet.allOf(Type.class).toArray();
		for(int i = 0; i < types.length; i++) {
			multiplicator.put((Type) types[i] , powerAgainst[i]);
		}
	}
	


}
